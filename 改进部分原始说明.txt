以下内容为论文中关于AIFR部分的内容。

Age-invariant face recognition (AIFR) task.  
为了鼓励AFD去鲁棒地分解特征，我们使用年龄估计任务和一个人脸识别任务去监督特征分解。具体来说，x_age通过一个年龄估计任务描绘年龄变化，同时x_id编码了身份相关信息。我们使用一个带有两个 分别有512和101个神经元的 线性层的年龄估计网络A去得到类似deep expectation（DEX）[39]的年龄回归，通过计算一个softmax期望值去学习年龄分布。另一个线性层 W包含R^(101*N) 则添加在最后用于年龄分类，正则化学习到的分布。在这里，N是年龄组的数量。用于优化年龄估计的损失函数可定义为：

\[
\ell_{AE}(X_{age}) = \mathbb{E}_I \left[ \ell_{MSE}(\text{DEX}(A(X_{age})), Y_{age}) + \ell_{CE}(A(X_{age})W, C_{age}) \right], \quad (3)
\]

其中Y_{age},C_{age}, ell_{MSE}, ell_{CE}分别为ground truth年龄、ground truth年龄组、用于年龄回归的均方差（MSE）和用于年龄组分类的交叉熵（CE）损失。

接下来我们使用512个神经元的线性层L 去抽取特征向量，然后使用CosFace损失去监督用于身份分类的的X_id学习。我们还介绍了一个跨年龄域对抗学习，通过一个带有梯度反转层(GRL)[8]的连续域自适应[46]去鼓励X_id为年龄不变的（即某个人不同年龄的照片得到的X_id是相同的）。AIFR最终的损失为：


\[
\mathcal{L}^{AIFR} = \ell_{COSFACE}(\mathcal{L}(X_{id}), y_{id}) + \lambda^{AIFR}_{age} \mathcal{L}_{AE}(X_{age}) + \lambda^{AIFR}_{id} \mathcal{L}_{AE}(\text{GRL}(X_{id})), \quad (4)
\]



其中，第一项是CosFace损失，第二项是年龄估计损失，最后一项是域适应损失，y_id是身份标签，λ∗控制不同损失项的平衡。请注意，第二个和第三个项使用相同的网络结构，但有不同的输入，并且是独立训练的。为了简单起见，我们忽略了激活函数和batchNorm，除了AFD之外，我们的人脸识别模型严格按照[6]中的设置设计。

python dataset/convert_insightface.py --source /root/autodl-tmp/faces_webface_112x112 --dest /root/MTLFace/dataset/casia-webface-112x112-arcface
python dataset/convert_insightface.py --bin --source /root/autodl-tmp/faces_webface_112x112/agedb_30.bin --dest /root/MTLFace/dataset/arcface-test-set
